<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">
    <!--不拦截的资源-->
    <security:http pattern="/static/**" security="none"/>
    <security:http pattern="/forget/page" security="none"/>
    <security:http pattern="/forget/update" security="none"/>
    <!--配置springSecurity
    auto-config 自动加载配置文件
    use-expressions 表示是否使用spring的el表达式 可以用false
    -->
    <security:http auto-config="true" use-expressions="true">
        <!--让认证页面可以匿名访问-->
        <security:intercept-url pattern="/login/page" access="permitAll()"/>
        <!--拦截资源
        pattern="/**" 拦截所有
        access=hasAnyRole 可以多个 hasRole 只能单个权限-->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_TEACHER','ROLE_CHAIRMEN')"/>
        <!--配置认证信息
            authentication-failure-handler-ref 指定配置文件
            -->
        <security:form-login login-page="/login/page"
                             login-processing-url="/login"
                             authentication-failure-handler-ref="loginFailureHandler"
                             authentication-success-handler-ref="loginSuccessHandler"

        />

        <!--配置退出登录信息-->
        <security:logout logout-url="/logout"
                         logout-success-url="/login/page"/>
        <!--去掉csrf拦截器-->
        <!--<security:csrf disabled="true"/>-->
    </security:http>
    <!--配置加密规则-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!--
        springSecurity 默认加密
        {noop} 表示不加密认证
        user-service-ref 指定验证文件
        -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customUserDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
 </beans>